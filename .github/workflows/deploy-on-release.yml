name: libcellml-deploy-on-release

on:
  release:
    types: # This configuration does not affect the page_build event above
      - created

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC Py38", artifact: "Windows-MSVC.tar.xz",
            os: windows-latest,
            build_type: "Release", cc: "cl", cxx: "cl", python_version: 3.8,
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        - {
            name: "Windows Latest MSVC Py37", artifact: "Windows-MSVC-2.tar.xz",
            os: windows-latest,
            build_type: "Release", cc: "gcc", cxx: "g++", python_version: 3.7
          }
        - {
            name: "Ubuntu Latest GCC Py36", artifact: "Linux.tar.xz",
            os: ubuntu-latest,
            build_type: "Release", cc: "gcc", cxx: "g++", python_version: 3.6
          }
        - {
            name: "macOS Latest Clang Py38", artifact: "macOS.tar.xz",
            os: macos-latest,
            build_type: "Release", cc: "clang", cxx: "clang++", python_version: 3.8
          }
        - {
            name: "macOS Latest Clang Py37", artifact: "macOS.tar-2.xz",
            os: macos-latest,
            build_type: "Release", cc: "clang", cxx: "clang++", python_version: 3.7
          }

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.config.python_version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python_version }}

    - name: Prepare environment
      with:
        python-version: ${{ matrix.config.python_version }}
      shell: cmake -P {0}
      run: |
        message(STATUS "Using CMake version: ${CMAKE_VERSION}")
        message(STATUS "CMAKE_CURRENT_SOURCE_DIR: ${CMAKE_CURRENT_SOURCE_DIR}")
        message(STATUS "CMAKE_CURRENT_BINARY_DIR: ${CMAKE_CURRENT_BINARY_DIR}")
        message(STATUS "PWD ENV: $ENV{PWD}")

        if ("${{ runner.os }}" STREQUAL "Windows")
          set(libxml2_url "https://github.com/OpenCMISS-Dependencies/libxml2/archive/v2.9.6-3.zip")
          file(DOWNLOAD "${libxml2_url}" "$ENV{HOME}/libxml2-2.9.6-3.zip" SHOW_PROGRESS)
          execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./libxml2-2.9.6-3.zip WORKING_DIRECTORY "$ENV{HOME}")
          execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory build-libxml2 WORKING_DIRECTORY "$ENV{HOME}")
          exectue_process(COMMAND ${CMAKE_COMMAND} -S "$ENV{HOME}/libxml2-2.9.6-3" -B "$ENV{HOME}/build-libxml2")
          exectue_process(COMMAND ${CMAKE_COMMAND} --build "$ENV{HOME}/build-libxml2" --target all --config Release)
          exectue_process(COMMAND ${CMAKE_COMMAND} --install "$ENV{HOME}/build-libxml2" --config Release)

          set(swig_url "http://prdownloads.sourceforge.net/swig/swigwin-4.0.2.zip")
          file(DOWNLOAD "${swig_url}" "$ENV{HOME}/swigwin-4.0.2.zip" SHOW_PROGRESS)
          execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./swigwin-4.0.2.zip WORKING_DIRECTORY "$ENV{HOME}")
        else()
          set(swig_url "http://prdownloads.sourceforge.net/swig/swig-4.0.2.tar.gz")
          file(DOWNLOAD "${swig_url}" "$ENV{HOME}/swig-4.0.2.tar.gz" SHOW_PROGRESS)
          execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf "$ENV{HOME}/swig-4.0.2.tar.gz")

          execute_process(COMMAND pwd COMMAND ./configure COMMAND make COMMAND make install WORKING_DIRECTORY "$ENV{HOME}/swig-4.0.2")
        endif()


    - name: Configure
      with:
        python-version: ${{ matrix.config.python_version }}
      shell: cmake -P {0}
      run: |
        set(ENV{CC} ${{ matrix.config.cc }})
        set(ENV{CXX} ${{ matrix.config.cxx }})

        if ("${{ runner.os }}" STREQUAL "Windows" AND NOT "x${{ matrix.config.environment_script }}" STREQUAL "x")
          execute_process(
            COMMAND "${{ matrix.config.environment_script }}" && set
            OUTPUT_FILE environment_script_output.txt
          )
          file(STRINGS environment_script_output.txt output_lines)
          foreach(line IN LISTS output_lines)
            if (line MATCHES "^([a-zA-Z0-9_-]+)=(.*)$")
              set(ENV{${CMAKE_MATCH_1}} "${CMAKE_MATCH_2}")
            endif()
          endforeach()
          file(APPEND "$ENV{PATH}" "$ENV{HOME}/swigwin-4.0.2")
        else()
          file(APPEND "$ENV{PATH}" "$ENV{HOME}/swig-4.0.2")
        endif()

        message(STATUS "PATH: $ENV{PATH}")

        execute_process(
          COMMAND ${CMAKE_COMMAND}
            -S .
            -B build
            -D BUILD_TYPE=$ENV{BUILD_TYPE}
          RESULT_VARIABLE result
        )
        if (NOT result EQUAL 0)
          message(FATAL_ERROR "Bad exit status")
        endif()


