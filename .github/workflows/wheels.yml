name: wheels

on:
  push
#    types:
#      - published
#  workflow_dispatch:

jobs:
  wheels:
    name: ${{ runner.os }} ${{ matrix.py }} wheels
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12, ubuntu-20.04, windows-2019]
        py: [cp37-*, cp38-*, cp39-*, cp310-*]
#        include:
#          - name: 'Windows wheels'
#            os: windows-2019
#          - name: 'Linux wheels'
#            os: ubuntu-20.04
#          - name: 'macOS wheels'
#            os: macos-12
    steps:
      - name: Check out libCellML
        uses: actions/checkout@v2
      - name: Configure MSVC
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.8.1
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse src/bindings/python/
        env:
#          CIBW_BUILD_VERBOSITY: 1
          CIBW_ARCHS: auto64
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_BUILD: ${{ matrix.py }}
          CIBW_TEST_SKIP: "*_arm64"
          CIBW_BEFORE_ALL_LINUX: yum install -y libxml2-devel || (apk add libxml2-dev && rm /usr/lib/cmake/libxml2/libxml2-config.cmake)
          CIBW_BEFORE_ALL_WINDOWS: cd src/bindings/python && cmake -S wheel_dependencies -B build-wheel_dependencies -G Ninja && cd build-wheel_dependencies && ninja
          CIBW_BEFORE_BUILD_LINUX: which python && which pip
          CIBW_ENVIRONMENT_MACOS: >
            MACOSX_DEPLOYMENT_TARGET=11.0
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: ""
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: ""
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
